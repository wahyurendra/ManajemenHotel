/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.restclient.managementhotel;

import static com.restclient.managementhotel.Koneksi.conn;
import com.toedter.calendar.JDateChooser;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.temporal.TemporalAccessor;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class Reservasi extends javax.swing.JFrame {

    /**
     * Creates new form Reservasi
     */
    public Reservasi() throws SQLException {
        initComponents();
        loadTabelReservasi();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblReservasi = new javax.swing.JTable();
        txtCari = new javax.swing.JTextField();
        btnTambah = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblReservasi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblReservasi);

        txtCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCariActionPerformed(evt);
            }
        });
        txtCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCariKeyPressed(evt);
            }
        });

        btnTambah.setText("Tambah Data");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        btnHapus.setText("Hapus Data");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit Data");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(100, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1091, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52))
            .addGroup(layout.createSequentialGroup()
                .addGap(350, 350, 350)
                .addComponent(btnTambah)
                .addGap(177, 177, 177)
                .addComponent(btnHapus)
                .addGap(173, 173, 173)
                .addComponent(btnEdit)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(47, Short.MAX_VALUE)
                .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnHapus)
                    .addComponent(btnEdit)
                    .addComponent(btnTambah))
                .addGap(46, 46, 46))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCariActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCariActionPerformed

    private void txtCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCariKeyPressed
        // TODO add your handling code here:
                if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            String teks = txtCari.getText();
            try {
                loadTabelReservasi(teks);
            } catch (SQLException e) {
                Logger.getLogger(Kamar.class.getName()).log(Level.SEVERE, null, e);
            }
        }
    }//GEN-LAST:event_txtCariKeyPressed

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        // TODO add your handling code here:
        TambahReservasi fTR = new TambahReservasi();
        fTR.show();
        this.hide();
    }//GEN-LAST:event_btnTambahActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        // TODO add your handling code here:
        if(tblReservasi.isRowSelected(tblReservasi.getSelectedRow())==true){
            int selectedID = (int)tblReservasi.getValueAt(tblReservasi.getSelectedRow(), 0);
            
            int result = JOptionPane.showConfirmDialog(
                this,
                "Kamu akan menghapus data Reservasi "
                        + tblReservasi.getValueAt(tblReservasi.getSelectedRow(),1).toString(),
                "Peringatan!",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE
            );
            
            if (result == JOptionPane.YES_OPTION){
                try{
                    Statement stmt = conn.createStatement();
                    stmt.executeUpdate("DELETE FROM reservasi WHERE id_reservasi='"
                            + selectedID + "'");
                    loadTabelReservasi();
                } catch (SQLException e) {
                    System.out.println(e);
                }
            }
         } else {
             JOptionPane.showMessageDialog(this, "Tidak ada yang dipilih");
         }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
                // TODO add your handling code here:
        if(tblReservasi.isRowSelected(tblReservasi.getSelectedRow())==true){
            int selectedID = (int)tblReservasi.getValueAt(tblReservasi.getSelectedRow(), 0);
            JTextField txtNo = new JTextField(15);
            JTextField txtKp = new JTextField(15);
            JTextField txtNp = new JTextField(15);
            JTextField txtNk = new JTextField(15);
            JDateChooser tgla = new JDateChooser();
            JDateChooser tglb = new JDateChooser();
            JTextField nr = new JTextField();
            JTextField txtStatus = new JTextField(15);
            DateFormat dsF = new SimpleDateFormat("yyyy-MM-dd");
            
            
            txtNo.setText(tblReservasi.getValueAt(tblReservasi.getSelectedRow(), 1).toString());
            txtKp.setText(tblReservasi.getValueAt(tblReservasi.getSelectedRow(), 2).toString());
            txtNp.setText(tblReservasi.getValueAt(tblReservasi.getSelectedRow(), 3).toString());
            txtNk.setText(tblReservasi.getValueAt(tblReservasi.getSelectedRow(), 4).toString());
            tgla.setDate((java.util.Date) tblReservasi.getValueAt(tblReservasi.getSelectedRow(),5));
            tglb.setDate((java.util.Date) tblReservasi.getValueAt(tblReservasi.getSelectedRow(),6));
            String datea;
            datea.dsF.format(tgla);
            nr.setText(tblReservasi.getValueAt(tblReservasi.getSelectedRow(), 7).toString());
            txtStatus.setText(tblReservasi.getValueAt(tblReservasi.getSelectedRow(), 8).toString());
            
            
            JPanel myPanel = new JPanel();
            myPanel.add(new JLabel("Nomor"));
            myPanel.add(txtNo);
            myPanel.add(new JLabel("Kode Pengunjung"));
            myPanel.add(txtKp);
            myPanel.add(new JLabel("Nama Pengunjung"));
            myPanel.add(txtNp);
            myPanel.add(new JLabel("Nomor Kamar"));
            myPanel.add(txtNk);
            myPanel.add(new JLabel("Tanggal Check-In"));
            myPanel.add(tgla);
            myPanel.add(new JLabel("Tanggal Check-Out"));
            myPanel.add(tglb);
            myPanel.add(new JLabel("Kode Resepsionis"));
            myPanel.add(nr);
            myPanel.add(new JLabel("Status"));
            myPanel.add(txtStatus);
            
            int result = JOptionPane.showConfirmDialog(this, myPanel,
                "Edit Data", 
                JOptionPane.OK_CANCEL_OPTION,JOptionPane.PLAIN_MESSAGE);
             
            if (result == JOptionPane.OK_OPTION){
                try{
                    Statement stmt = conn.createStatement();
                    stmt.executeUpdate("UPDATE reservasi SET id_reservasi='"
                        + txtNo.getText()  + "', kode_customer='"
                        + txtKp.getText() +  "', no_kamar='"
                        + txtNk.getText() + "', tgl_checkin='"
                        + tgla.getDate() + "', tgl_checkout='"
                        + tglb.getDate()+ "', kode_recept='"
                        + nr.getText()+ "', status_reservasi='"
                        + txtStatus.getText()+ "' WHERE id_reservasi='"
                        + selectedID + "'");
                    Statement stmt1= conn.createStatement();
                    stmt1.executeUpdate("UPDATE customer SET nama_customer='"
                        + txtNp.getText() + "' WHERE id_reservasi='"
                        + selectedID + "'");
                    loadTabelReservasi();
                } catch (SQLException e) {
                    System.out.println(e.getMessage());
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Tidak ada yang dipilih");
        }
    }//GEN-LAST:event_btnEditActionPerformed

        public void loadTabelReservasi() throws java.sql.SQLException{
      Connection conn = Koneksi.connectDB();

        String sql = "SELECT * FROM view_reservasi_full";
        Object[] kolom = {"No", "Kode Pengunjung", "Nama Pengunjung",
            "Nomor Kamar", "Tanggal Check-In","Tanggal Check-Out", "Nama Resepsionis", "Status Reservasi"};
        DefaultTableModel dataModel = new DefaultTableModel(null, kolom);
        tblReservasi.setModel(dataModel);
        tblReservasi.getColumnModel().getColumn(0).setMaxWidth(30);
        
        try{
            Statement stmt = conn.createStatement();
            ResultSet rs   = stmt.executeQuery(sql);
            
            while(rs.next()){    
                int id = rs.getInt("id_reservasi");
                String kodecs = rs.getString("kode_customer");
                String nm = rs.getString("nama_customer");
                String nokamar = rs.getString("no_kamar");
                Date tcin = rs.getDate("tgl_checkin");
                Date tcout = rs.getDate("tgl_checkout");
                String kode = rs.getString("kode_recept");
                int status = rs.getInt("status_reservasi");
                
                Object[] data={id, kodecs, nm, nokamar, tcin, tcout, kode, status};
                dataModel.addRow(data);
            }
        } catch (java.sql.SQLException e){
            System.out.println(e.getMessage());
        }
    }
        public void loadTabelReservasi(String teks) throws java.sql.SQLException{
      Connection conn = Koneksi.connectDB();

       String sql = "SELECT * FROM view_reservasi_full WHERE id_reservasi like '%"+ teks +"%'";
        Object[] kolom = {"No", "Kode Pengunjung", "Nama Pengunjung",
            "Nomor Kamar", "Tanggal Check-In","Tanggal Check-Out", "Nama Resepsionis", "Status Reservasi"};
        DefaultTableModel dataModel = new DefaultTableModel(null, kolom);
        tblReservasi.setModel(dataModel);
        tblReservasi.getColumnModel().getColumn(0).setMaxWidth(30);
        
        try{
            Statement stmt = conn.createStatement();
            ResultSet rs   = stmt.executeQuery(sql);
            
            while(rs.next()){    
                int id = rs.getInt("id_reservasi");
                String kodecs = rs.getString("kode_customer");
                String nm = rs.getString("nama_customer");
                String nokamar = rs.getString("no_kamar");
                Date tcin = rs.getDate("tgl_checkin");
                Date tcout = rs.getDate("tgl_checkout");
                String kode = rs.getString("kode_recept");
                int status = rs.getInt("status_reservasi");
                
                Object[] data={id, kodecs, nm, nokamar, tcin, tcout, kode, status};
                dataModel.addRow(data);
            }
        } catch (java.sql.SQLException e){
            System.out.println(e.getMessage());
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reservasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reservasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reservasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reservasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Reservasi().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Reservasi.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnTambah;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblReservasi;
    private javax.swing.JTextField txtCari;
    // End of variables declaration//GEN-END:variables
}
